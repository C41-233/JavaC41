package c41.utility.linq;

import c41.core.assertion.Arguments;
import c41.utility.linq.enumerator.*;

<#list configs as config>
<#assign Box=config.Box>
<#assign Name=config.Name>
<#assign TypeName="${Name}SkipEnumerable">
<#assign Enumerable="I${Name}Enumerable">
<#assign Enumerator="I${Name}Enumerator">

class ${TypeName} implements ${Enumerable}{

	private final ${Enumerable} enumerable;
	private final int skip;

	public ${TypeName}(${Enumerable} enumerable, int skip) {
		Arguments.isNotNull(enumerable);
		Arguments.is(skip>=0, "%d < 0", skip);
		
		this.enumerable = enumerable;
		this.skip = skip;
	}
	
	@Override
	public ${Enumerator} iterator() {
		${Enumerator} enumerator = enumerable.iterator();
		for(int i=0; i < skip; i++) {
			if(enumerator.hasNext()) {
				enumerator.next${Name}();
			}
		}
		return enumerator;
	}
	
}
</#list>